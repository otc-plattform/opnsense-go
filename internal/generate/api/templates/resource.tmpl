// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package {{ .Controller.Name }}

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var {{ .Resource.Name }}Opts = api.ReqOpts{
	AddEndpoint:         "{{ .Resource.Endpoints.Add }}",
	GetEndpoint:         "{{ .Resource.Endpoints.Get }}",
	UpdateEndpoint:      "{{ .Resource.Endpoints.Update }}",
	DeleteEndpoint:      "{{ .Resource.Endpoints.Delete }}",
	ReconfigureEndpoint:
	{{- if or (eq .Resource.Endpoints.Reconfigure "null") .Resource.ReadOnly -}}
    "",
    {{- else if not (eq .Resource.Endpoints.Reconfigure "") -}}
    "{{ .Resource.Endpoints.Reconfigure }}",
    {{- else -}}
    {{ .Controller.Name }}ReconfigureEndpoint,
    {{- end }}
	Monad:               "{{ .Resource.Monad }}",
}

// Data structs
{{ range $key, $value := .Resource.CustomTypes }}
type {{ $key }} struct {
{{ range $value }}
    {{ .Name }} {{ .Type }}`json:"{{ .Key }}
    {{- if not .OmitEmpty -}}
    "
    {{- else -}}
    ,omitempty"
    {{- end }}`
{{- end }}
}
{{ end }}

type {{ .Resource.Name }} struct {
{{ range .Resource.Attrs }}
    {{ .Name }} {{ .Type }} `json:"{{ .Key }}
    {{- if not .OmitEmpty -}}
    "
    {{- else -}}
    ,omitempty"
    {{- end }}`
{{- end }}
}

// CRUD operations

{{ if not .Resource.ReadOnly }}
func (c *Controller) Add{{ .Resource.Name }}(ctx context.Context, resource *{{ .Resource.Name }}) (string, error) {
	return api.Add(c.Client(), ctx, {{ .Resource.Name }}Opts, resource)
}
{{ end }}

func (c *Controller) Get{{ .Resource.Name }}(ctx context.Context, id string) (*{{ .Resource.Name }}, error) {
	return api.Get{{- if .Resource.GetByFilter -}}
	Filter
	{{- end -}}
	(c.Client(), ctx, {{ .Resource.Name }}Opts, &{{ .Resource.Name }}{}, id)
}

{{ if not .Resource.ReadOnly }}
func (c *Controller) Update{{ .Resource.Name }}(ctx context.Context, id string, resource *{{ .Resource.Name }}) error {
	return api.Update(c.Client(), ctx, {{ .Resource.Name }}Opts, resource, id)
}

func (c *Controller) Delete{{ .Resource.Name }}(ctx context.Context, id string) error {
    return api.Delete(c.Client(), ctx, {{ .Resource.Name }}Opts, id)
}
{{ end }}
