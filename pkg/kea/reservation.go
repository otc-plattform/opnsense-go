// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package kea

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var ReservationOpts = api.ReqOpts{
	AddEndpoint:         "/kea/dhcpv4/add_reservation",
	GetEndpoint:         "/kea/dhcpv4/get_reservation",
	UpdateEndpoint:      "/kea/dhcpv4/set_reservation",
	DeleteEndpoint:      "/kea/dhcpv4/del_reservation",
	ReconfigureEndpoint: keaReconfigureEndpoint,
	Monad:               "reservation",
}

// Data structs

type Reservation struct {
	Subnet      api.SelectedMap `json:"subnet"`
	IpAddress   string          `json:"ip_address"`
	HwAddress   string          `json:"hw_address"`
	Hostname    string          `json:"hostname"`
	Description string          `json:"description"`
}

// CRUD operations

func (c *Controller) AddReservation(ctx context.Context, resource *Reservation) (string, error) {
	return api.Add(c.Client(), ctx, ReservationOpts, resource)
}

func (c *Controller) GetReservation(ctx context.Context, id string) (*Reservation, error) {
	return api.Get(c.Client(), ctx, ReservationOpts, &Reservation{}, id)
}

func (c *Controller) UpdateReservation(ctx context.Context, id string, resource *Reservation) error {
	return api.Update(c.Client(), ctx, ReservationOpts, resource, id)
}

func (c *Controller) DeleteReservation(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, ReservationOpts, id)
}
